// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `PlayerMP3.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Generated.Player;

public interface dspPrx extends Ice.ObjectPrx
{
    public float[] filter(float[] s);

    public float[] filter(float[] s, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_filter(float[] s);

    public Ice.AsyncResult begin_filter(float[] s, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_filter(float[] s, Ice.Callback __cb);

    public Ice.AsyncResult begin_filter(float[] s, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_filter(float[] s, Callback_dsp_filter __cb);

    public Ice.AsyncResult begin_filter(float[] s, java.util.Map<String, String> __ctx, Callback_dsp_filter __cb);

    public Ice.AsyncResult begin_filter(float[] s, 
                                        IceInternal.Functional_GenericCallback1<float[]> __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_filter(float[] s, 
                                        IceInternal.Functional_GenericCallback1<float[]> __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_filter(float[] s, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_GenericCallback1<float[]> __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_filter(float[] s, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_GenericCallback1<float[]> __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    public float[] end_filter(Ice.AsyncResult __result);

    public float[] bass(float[] s, int level);

    public float[] bass(float[] s, int level, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_bass(float[] s, int level);

    public Ice.AsyncResult begin_bass(float[] s, int level, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_bass(float[] s, int level, Ice.Callback __cb);

    public Ice.AsyncResult begin_bass(float[] s, int level, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_bass(float[] s, int level, Callback_dsp_bass __cb);

    public Ice.AsyncResult begin_bass(float[] s, int level, java.util.Map<String, String> __ctx, Callback_dsp_bass __cb);

    public Ice.AsyncResult begin_bass(float[] s, 
                                      int level, 
                                      IceInternal.Functional_GenericCallback1<float[]> __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_bass(float[] s, 
                                      int level, 
                                      IceInternal.Functional_GenericCallback1<float[]> __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public Ice.AsyncResult begin_bass(float[] s, 
                                      int level, 
                                      java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_GenericCallback1<float[]> __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    public Ice.AsyncResult begin_bass(float[] s, 
                                      int level, 
                                      java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_GenericCallback1<float[]> __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    public float[] end_bass(Ice.AsyncResult __result);
}
